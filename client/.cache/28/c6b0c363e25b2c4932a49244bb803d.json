{"id":"node_modules/task/src/watch.js","dependencies":[{"name":"/home/erynern/Documents/phase-2/week-2/kanban/client/package.json","includedInParent":true,"mtime":1581612444168},{"name":"/home/erynern/Documents/phase-2/week-2/kanban/client/node_modules/task/package.json","includedInParent":true,"mtime":1581612443204},{"name":"path","loc":{"line":1,"column":37},"parent":"/home/erynern/Documents/phase-2/week-2/kanban/client/node_modules/task/src/watch.js","resolved":"/usr/lib/node_modules/parcel-bundler/node_modules/path-browserify/index.js"},{"name":"./util/exec-task","loc":{"line":2,"column":25},"parent":"/home/erynern/Documents/phase-2/week-2/kanban/client/node_modules/task/src/watch.js","resolved":"/home/erynern/Documents/phase-2/week-2/kanban/client/node_modules/task/src/util/exec-task.js"},{"name":"chokidar","loc":{"line":3,"column":25},"parent":"/home/erynern/Documents/phase-2/week-2/kanban/client/node_modules/task/src/watch.js","resolved":"/home/erynern/Documents/phase-2/week-2/kanban/client/node_modules/task/node_modules/chokidar/index.js"},{"name":"stamp","loc":{"line":4,"column":19},"parent":"/home/erynern/Documents/phase-2/week-2/kanban/client/node_modules/task/src/watch.js","resolved":"/home/erynern/Documents/phase-2/week-2/kanban/client/node_modules/stamp/dist/index.js"},{"name":"fs","loc":{"line":5,"column":19},"parent":"/home/erynern/Documents/phase-2/week-2/kanban/client/node_modules/task/src/watch.js","resolved":"/usr/lib/node_modules/parcel-bundler/src/builtins/_empty.js"}],"generated":{"js":"const { isAbsolute, join } = require('path')\nconst execTask = require('./util/exec-task')\nconst chokidar = require('chokidar')\nconst bs = require('stamp')\nconst fs = require('fs')\nconst watching = {}\nvar watcher\n\nconst onchange = file => {\n  const listeners = watching[file]\n  const stamp = bs.create()\n  let i = listeners.length\n  while (i--) execTask(listeners[i], stamp)\n}\n\nconst listen = (file, task) => fs.stat(file, (err, status) => {\n  if (err) return\n  if (status.isDirectory()) {\n    fs.readdir(file, (err, files) => {\n      if (err) return\n      let i = files.length\n      while (i--) listen(join(file, files[i]), task)\n    })\n  } else {\n    fs.realpath(file, (err, file) => {\n      if (err) return\n      const listeners = watching[file] || (watching[file] = [])\n      if (listeners.indexOf(task) === -1) {\n        listeners.push(task)\n        if (watcher) {\n          watcher.add(file)\n        } else {\n          watcher = chokidar.watch(file, {\n            ignoreInitial: true\n          }).on('change', onchange)\n        }\n      }\n    })\n  }\n})\n\nconst unlisten = (file, task) => fs.stat(file, (err, status) => {\n  if (err) return\n  if (status.isDirectory()) {\n    fs.readdir(file, (err, files) => {\n      if (err) return\n      let i = files.length\n      while (i--) unlisten(join(file, files[i]), task)\n    })\n  } else {\n    fs.realpath(file, (err, file) => {\n      if (err) return\n      const listeners = watching[file]\n      if (listeners && task.entry !== file) {\n        listeners.splice(listeners.indexOf(task), 1)\n        if (!listeners.length) {\n          watcher.unwatch(file)\n          delete watching[file]\n        }\n      }\n    })\n  }\n})\n\nexports.props = {\n  watch: {\n    props: {\n      default: {\n        on: (val, stamp, file) => {\n          const task = file.parent().parent()\n          const cwd = task.root().cwd\n          if (!isAbsolute(file = file.compute())) {\n            file = join(cwd, file)\n          }\n          if (val) {\n            listen(file, task)\n          } else {\n            unlisten(file, task)\n          }\n        }\n      }\n    }\n  }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/task/src/watch.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/task/src/watch.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}}],"sources":{"node_modules/task/src/watch.js":"const { isAbsolute, join } = require('path')\nconst execTask = require('./util/exec-task')\nconst chokidar = require('chokidar')\nconst bs = require('stamp')\nconst fs = require('fs')\nconst watching = {}\nvar watcher\n\nconst onchange = file => {\n  const listeners = watching[file]\n  const stamp = bs.create()\n  let i = listeners.length\n  while (i--) execTask(listeners[i], stamp)\n}\n\nconst listen = (file, task) => fs.stat(file, (err, status) => {\n  if (err) return\n  if (status.isDirectory()) {\n    fs.readdir(file, (err, files) => {\n      if (err) return\n      let i = files.length\n      while (i--) listen(join(file, files[i]), task)\n    })\n  } else {\n    fs.realpath(file, (err, file) => {\n      if (err) return\n      const listeners = watching[file] || (watching[file] = [])\n      if (listeners.indexOf(task) === -1) {\n        listeners.push(task)\n        if (watcher) {\n          watcher.add(file)\n        } else {\n          watcher = chokidar.watch(file, {\n            ignoreInitial: true\n          }).on('change', onchange)\n        }\n      }\n    })\n  }\n})\n\nconst unlisten = (file, task) => fs.stat(file, (err, status) => {\n  if (err) return\n  if (status.isDirectory()) {\n    fs.readdir(file, (err, files) => {\n      if (err) return\n      let i = files.length\n      while (i--) unlisten(join(file, files[i]), task)\n    })\n  } else {\n    fs.realpath(file, (err, file) => {\n      if (err) return\n      const listeners = watching[file]\n      if (listeners && task.entry !== file) {\n        listeners.splice(listeners.indexOf(task), 1)\n        if (!listeners.length) {\n          watcher.unwatch(file)\n          delete watching[file]\n        }\n      }\n    })\n  }\n})\n\nexports.props = {\n  watch: {\n    props: {\n      default: {\n        on: (val, stamp, file) => {\n          const task = file.parent().parent()\n          const cwd = task.root().cwd\n          if (!isAbsolute(file = file.compute())) {\n            file = join(cwd, file)\n          }\n          if (val) {\n            listen(file, task)\n          } else {\n            unlisten(file, task)\n          }\n        }\n      }\n    }\n  }\n}\n"},"lineCount":85}},"error":null,"hash":"2e6b5fbbfb1655feaf322e246b024b11","cacheData":{"env":{}}}